pipeline {
    agent any

    environment {
        IMAGE_NAME = 'bhanureddy/abctest'
        IMAGE_TAG = "${BUILD_NUMBER}"                  // üëà Unique tag for each build
        DOCKER_CREDENTIALS = 'dockerhub'               // Jenkins Docker Hub creds ID
        GIT_CREDENTIALS = 'github-pat'                 // Jenkins GitHub PAT ID
        APP_REPO = 'https://github.com/rangasamudrambhanu/netflix.git'
        GITOPS_REPO = 'https://github.com/rangasamudrambhanu/gitops.git'
        BRANCH = 'main'
    }

    stages {
        stage('Checkout App Code') {
            steps {
                git url: "${APP_REPO}", branch: "${BRANCH}"
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_NAME}:${IMAGE_TAG}")
                }
            }
        }

        stage('Run Unit Tests') {
            steps {
                script {
                    dockerImage.inside {
                        sh 'pytest test_app.py'
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS) {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update GitOps Repo') {
            steps {
                dir('gitops') {
                    deleteDir() // Ensure it's clean
                    script {
                        withCredentials([usernamePassword(credentialsId: "${GIT_CREDENTIALS}", usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
                            sh """
                                git clone https://${GIT_USER}:${GIT_TOKEN}@github.com/rangasamudrambhanu/gitops.git .
                                git config user.name "Jenkins Bot"
                                git config user.email "jenkins-bot@example.com"
                                sed -i 's|image:.*|image: bhanureddy/abctest:${BUILD_NUMBER}|' deployment.yaml
                                git add deployment.yaml
                                git commit -m "Update image tag to ${BUILD_NUMBER} from Jenkins"
                                git push origin main
                            """
                        }
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                sh 'docker image prune -f'
            }
        }
    }

    post {
        success {
            echo "‚úÖ Build ${BUILD_NUMBER} pushed & GitOps repo updated. Argo CD will deploy this version."
        }
        failure {
            echo "‚ùå Build failed. Check logs."
        }
    }
}
